
def makeCounter() {
	x := 0;
	numCalls := lambda() { x := x + 1; return x; }
	return numCalls;
}

println "A closure 'closes over' the environment in which the lambda is defined.";
println "The output of makeCounter() demonstrates a closure: ";
m := 0;
counter := makeCounter();
loop (m < 4) {
	println counter();
	m := m + 1;
}

println "Witht that definition in mind, a lambda which is declared in a global scope is the same as a function: ";
square := lambda(x) { return x * x; };
println square(5);
println square(7);